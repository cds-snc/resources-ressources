name: Build and Push Container to ECR, deploy to lambda

on: [pull_request]

  # workflow_dispatch:
  # push:
  #   branches: [main]

env:
  GITHUB_SHA: ${{ github.sha }}
  STAGING_REGISTRY: ${{ secrets.AWS_ACCOUNT }}.dkr.ecr.ca-central-1.amazonaws.com/learning-resources
  REPO_NAME: learning-frontend

jobs:
  # changes:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     images: ${{ steps.filter.outputs.changes }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - uses: dorny/paths-filter@v2
  #       id: filter
  #       with:
  #         filters: |
  #           app: 'app/**'
  build-push-and-deploy:
    runs-on: ubuntu-latest
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     image: ${{ fromJSON(needs.changes.outputs.images) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build container
        # working-directory: ./${{ matrix.image }}
        run: |
          docker build \
          --build-arg git_sha=$GITHUB_SHA \
          -t $STAGING_REGISTRY/$REPO_NAME:$GITHUB_SHA \
          -t $STAGING_REGISTRY/$REPO_NAME:latest .

      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push containers to ECR
        run: |
          docker push $STAGING_REGISTRY/$REPO_NAME:$GITHUB_SHA
          docker push $STAGING_REGISTRY/$REPO_NAME:latest

      - name: Logout of Amazon ECR
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      - name: Deploy lambda
        # if: matrix.image == 'app' || contains(matrix.image, 'scanners')
        run: |
          aws lambda update-function-code \
            --function-name $REPO_NAME \
            --image-uri $STAGING_REGISTRY/$REPO_NAME:latest > /dev/null 2>&1

      # - name: Migrate Database
      #   if: matrix.image == 'app'
      #   run: |
      #     source .github/workflows/scripts/migrate.sh
      #     migrate
